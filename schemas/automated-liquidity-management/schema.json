{
  "schema": "Automated Liquidity Management",
  "description": "Standard table definitions for automated liquidity management protocol.",
  "protocolCategory": ["Automated Liquidity Management"],
  "version": "1.0.0-alpha",
  "tables": [
    {
      "label": "Pools",
      "tableName": "automated_liquidity_pools",
      "aggregation": "none",
      "uniqueKey": ["pool_address"],
      "description": "List of pools in the protocol.",
      "properties": {
        "chain_id": {
          "description": "The standard chain id.",
          "type": "number"
        },
        "timestamp": {
          "description": "The timestamp this pool was created.",
          "type": "number"
        },
        "creation_block_number": {
          "description": "The block number that this pool was created.",
          "type": "number"
        },
        "strategy_vault_contract_address": {
          "description": "The contract address of the strategy vault which manages the liquidity pool positions.",
          "type": "string"
        },
        "underlying_liquidity_pool_address": {
          "description": "The contract address of the underlying liquidity pool where liquidity are deposited into",
          "type": "string"
        },
        "strategy_vault_receipt_token_address": {
          "description": "The contract address of ERC20 token which represents the share of liquidity provided.",
          "type": "string"
        },
        "strategy_vault_receipt_token_decimals": {
          "description": "The decimal amount of the ERC20 receipt token.",
          "type": "number"
        },
        "strategy_vault_receipt_token_symbol": {
          "description": "The symbol of the receipt token.",
          "type": "string"
        }
      }
    },
    {
      "label": "Position Snapshot",
      "tableName": "automated_liquidity_depositors",
      "aggregation": "daily",
      "uniqueKey": ["user_address", "pool_address", "block_date"],
      "description": "Snapshot of the pool users.",
      "properties": {
        "timestamp": {
          "description": "The timestamp of the snapshot.",
          "type": "number"
        },
        "block_date": {
          "description": "The timestamp truncated (ie, YYYY-MM-DD format for daily snapshots and YYYY-MM-DD HH:00:00 for hourly snapshots).",
          "type": "date"
        },
        "chain_id": {
          "description": "The standard chain id.",
          "type": "number"
        },
        "strategy_vault_contract_address": {
          "description": "The address of the strategy vault this user has a position in.",
          "type": "string"
        },
        "user_address": {
          "description": "The address of the user who has a position in the strategy vault.",
          "type": "string"
        },
        "underlying_liquidity_pool_address": {
          "description": "The address of the underlying liquidity pool where liquidity are deposited into",
          "type": "string"
        },
        "underlying_token_address": {
          "description": "The address of the supplied underlying token.",
          "type": "string"
        },
        "underlying_token_index": {
          "description": "The index of the underlying token in the smart contract, default 0.",
          "type": "number"
        },
        "underlying_token_amount": {
          "description": "The amount based on the user's share of the total underlying token, decimal normalized.",
          "type": "number"
        },
        "underlying_token_amount_usd": {
          "description": "The amount based on the user's share of the total underlying token, in USD.",
          "type": "number"
        },
        "total_fees_usd": {
          "description": "The total amount of revenue and fees paid in this pool in the given snapshot, in USD.",
          "type": "number"
        }
      }
    },
    {
      "label": "Pool Snapshot",
      "tableName": "automated_liquidity_pool_metrics",
      "aggregation": "daily",
      "uniqueKey": ["pool_address", "block_date"],
      "description": "TVL, fees, and incentives data at the pool level.",
      "properties": {
        "timestamp": {
          "description": "The timestamp of the snapshot.",
          "type": "number"
        },
        "block_date": {
          "description": "The timestamp truncated (ie, YYYY-MM-DD format for daily snapshots and YYYY-MM-DD HH:00:00 for hourly snapshots).",
          "type": "date"
        },
        "chain_id": {
          "description": "The standard chain id.",
          "type": "number"
        },
        "strategy_vault_contract_address": {
          "description": "The address of the strategy vault this user has a position in.",
          "type": "string"
        },
        "underlying_liquidity_pool_address": {
          "description": "The address of the underlying liquidity pool where liquidity are deposited into",
          "type": "string"
        },
        "underlying_token_address": {
          "description": "The address of the supplied underlying token.",
          "type": "string"
        },
        "underlying_token_index": {
          "description": "The index of the underlying token in the smart contract, default 0.",
          "type": "number"
        },
        "underlying_token_amount": {
          "description": "The amount of underlying token supplied in this pool, decimal normalized.",
          "type": "number"
        },
        "underlying_token_amount_usd": {
          "description": "The amount of underlying tokens supplied in this pool, in USD.",
          "type": "number"
        },
        "total_fees_usd": {
          "description": "The total amount of revenue and fees paid in this pool in the given snapshot, in USD.",
          "type": "number"
        }
      }
    },
    {
      "label": "Events",
      "tableName": "liquidity_yield_events",
      "aggregation": "transaction",
      "uniqueKey": ["transaction_hash", "log_index"],
      "description": "All user events (ie, Deposit, Withdrawal)",
      "properties": {
          "timestamp": {
              "description": "The timestamp of the transaction.",
              "type": "number"
          },
          "chain_id": {
              "description": "The standard id of the chain.",
              "type": "number"
          },
          "block_number": {
              "description": "The block number of the trade.",
              "type": "number"
          },
          "log_index": {
              "description": "The event log. For transactions that don't emit event, create arbitrary index starting from 0.",
              "type": "number"
          },
          "transaction_hash": {
              "description": "The hash of the transaction.",
              "type": "string"
          },
          "user_address": {
              "description": "The address that initiates the transaction (ie, the transaction signer).",
              "type": "string"
          },
          "pool_address": {
              "description": "The smart contract address of the pool.",
              "type": "string"
          },
          "underlying_token_address": {
              "description": "The contract address of the underlying token or deposited token.",
              "type": "string"
          },
          "amount": {
              "description": "The amount of token transacted, decimal normalized.",
              "type": "number"
          },
          "amount_usd": {
              "description": "The amount of token transacted, in USD.",
              "type": "number"
          },
          "event_type": {
              "description": "The type of event, corresponds to the action taken by the user (ie, deposit, withdrawal).",
              "type": "string"
          }
      }
  },
  {
    "label": "Incentive Claim Data",
    "tableName": "misc_incentive_claim",
    "aggregation": "transaction",
    "uniqueKey": ["transaction_hash", "log_index"],
    "description": "Transactional data on user level incentives claimed data.",
    "properties": {
      "timestamp": {
        "description": "The timestamp of the claim.",
        "type": "number"
      },
      "chain_id": {
        "description": "The standard chain id.",
        "type": "number"
      },
      "transaction_hash": {
        "description": "The hash of the transaction.",
        "type": "string"
      },
      "log_index": {
        "description": "The event log. For transactions that don't emit event, create arbitrary index starting from 0.",
        "type": "number"
      },
      "transaction_signer": {
        "description": "The address of the account that signed the transaction.",
        "type": "string"
      },
      "user_address": {
        "description": "The address of the user who claimed the incentives (could be different from the transaction_signer).",
        "type": "string"
      },
      "claimed_token_address": {
        "description": "The smart contract address of the claimed token.",
        "type": "string"
      },
      "amount": {
        "description": "The amount of the token claimed, decimal normalized.",
        "type": "number"
      },
      "amount_usd": {
        "description": "The amount of claimed tokens in USD.",
        "type": "number"
      },
      "other_incentive_usd": {
        "description": "(Optional) Any incentives outside of the claimed token, in this transaction, summed up in USD terms.",
        "type": "number"
      }
    }
  }
  ]
}
